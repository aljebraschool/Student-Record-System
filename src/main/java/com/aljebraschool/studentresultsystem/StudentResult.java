/*This is student record system desktop application 
 * that can take student records as input then
 * computer the summary of his records using transcript
 */
package com.aljebraschool.studentresultsystem;  //package declaration

//importing needed classes
import com.sun.glass.events.KeyEvent;
import java.awt.Component;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

//class declaration that inherite JFrame class 
public class StudentResult extends javax.swing.JFrame {

    /**
     * Creates new form StudentResult
     */
    public StudentResult() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        studentIdTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        surnameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        firstnameTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        totalScoreTextField = new javax.swing.JTextField();
        rankingTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        averageTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        englishTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        chemistryTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        computingTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        physicsTextFiield = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        biologyTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        mathsTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        addMathTextField = new javax.swing.JTextField();
        businessTextField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        transcript = new javax.swing.JTextArea();
        resetButton = new javax.swing.JButton();
        rankingButton = new javax.swing.JButton();
        transcriptButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Students Result System");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student-ID", "Course Code", "Maths", "English", "Biology", "Computing", "Chemisty", "Physics", "Add Maths", "Business", "Total Score", "Average", "Ranking"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 1350, 110));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 4), "Student Records", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N

        studentIdTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        studentIdTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIdTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Student-ID:");

        surnameTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        surnameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surnameTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Course Code:");

        firstnameTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        firstnameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstnameTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Firstname:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Ranking:");

        totalScoreTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        totalScoreTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalScoreTextFieldActionPerformed(evt);
            }
        });

        rankingTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        rankingTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rankingTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Surname:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Average:");

        averageTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        averageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                averageTextFieldActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Physics");

        englishTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        englishTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                englishTextFieldActionPerformed(evt);
            }
        });
        englishTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                englishTextFieldKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setText("Chemistry:");

        chemistryTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        chemistryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chemistryTextFieldActionPerformed(evt);
            }
        });
        chemistryTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chemistryTextFieldKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setText("Computing:");

        computingTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        computingTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computingTextFieldActionPerformed(evt);
            }
        });
        computingTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                computingTextFieldKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("English:");

        physicsTextFiield.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        physicsTextFiield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                physicsTextFiieldActionPerformed(evt);
            }
        });
        physicsTextFiield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                physicsTextFiieldKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("Maths:");

        biologyTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        biologyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                biologyTextFieldActionPerformed(evt);
            }
        });
        biologyTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                biologyTextFieldKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setText("Biology:");

        mathsTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        mathsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mathsTextFieldActionPerformed(evt);
            }
        });
        mathsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mathsTextFieldKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setText("Business:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel15.setText("Add Maths:");

        addMathTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        addMathTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMathTextFieldActionPerformed(evt);
            }
        });
        addMathTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addMathTextFieldKeyTyped(evt);
            }
        });

        businessTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        businessTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                businessTextFieldActionPerformed(evt);
            }
        });
        businessTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                businessTextFieldKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel16.setText("Total Score:");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MAT 101", "MAT 102", "MAT 201", "MAT 202" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(surnameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(firstnameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(studentIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(totalScoreTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                                    .addComponent(averageTextField)
                                    .addComponent(rankingTextField)))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(businessTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addMathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(biologyTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(computingTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chemistryTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mathsTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(englishTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(physicsTextFiield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(jSeparator1)
                .addGap(218, 218, 218))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mathsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(englishTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(biologyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addGap(18, 18, 18)
                                .addComponent(computingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(chemistryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(physicsTextFiield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(addMathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(businessTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(studentIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(firstnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(surnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalScoreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(averageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rankingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 910, 490));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 4), "Grades", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N

        transcript.setEditable(false);
        transcript.setColumns(20);
        transcript.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        transcript.setRows(5);
        jScrollPane1.setViewportView(transcript);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 0, 440, 490));

        resetButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        getContentPane().add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 610, 210, -1));

        rankingButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        rankingButton.setText("Ranking");
        rankingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rankingButtonActionPerformed(evt);
            }
        });
        getContentPane().add(rankingButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 610, 220, -1));

        transcriptButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        transcriptButton.setText("Transcript");
        transcriptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transcriptButtonActionPerformed(evt);
            }
        });
        getContentPane().add(transcriptButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 610, -1, -1));

        exitButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 610, 200, -1));

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 610, 210, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*declaring methods that handle the events of each text field component used in the program  */
    private void studentIdTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIdTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIdTextFieldActionPerformed

    private void surnameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surnameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_surnameTextFieldActionPerformed

    private void firstnameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstnameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstnameTextFieldActionPerformed

    private void totalScoreTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalScoreTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalScoreTextFieldActionPerformed

    private void rankingTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rankingTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rankingTextFieldActionPerformed

    private void averageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_averageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_averageTextFieldActionPerformed

    private void englishTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_englishTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_englishTextFieldActionPerformed

    private void chemistryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chemistryTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chemistryTextFieldActionPerformed

    private void computingTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computingTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_computingTextFieldActionPerformed

    private void physicsTextFiieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_physicsTextFiieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_physicsTextFiieldActionPerformed

    private void biologyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_biologyTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_biologyTextFieldActionPerformed

    private void mathsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mathsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mathsTextFieldActionPerformed

    private void addMathTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMathTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addMathTextFieldActionPerformed

    private void businessTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_businessTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_businessTextFieldActionPerformed

    //implement the action to perform when this text field is pressed
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
                                                    
      JTextField string = null;     // variable to set the text fields found in first panel named JPanel1
      
      //go through each component found in JPanel1 through its superclass called component
      for (Component component : jPanel1.getComponents() )
      {
          //navigate to the component's class through its getClass method then access its toString method to check if "javax.swing.JTextField" string is found
          if(component.getClass().toString().contains("javax.swing.JTextField"))
          {
             //if true 
              string = (JTextField) component;  //downcast the component class variable to its subclass type then store in variable string
              
              string.setText(null);             //now you can access the subclass only method, setText, to modify the text display
          }
      }
      
       
    
    }//GEN-LAST:event_resetButtonActionPerformed

    //Exit button component 
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
              
       //check if JOptionPane dialog box is a yes option which is 0
        if(JOptionPane.showConfirmDialog(null, "Confirm if you want to exit", "Student Result System", 
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION)
            
        {
            //if yes 
            System.exit(0); // then exit the program
        }
       
        
        
    }//GEN-LAST:event_exitButtonActionPerformed

    //delete button component
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();  //downcasting the superclass variable of class JTable (jTable1) to the variable of the subclass (model)
       if(jTable1.getSelectedRow() == -1)       //check if no row is selected by comparing it returned index to -1 
       {
           if(jTable1.getRowCount() == 0){      //check if the table has no row by comparing it with 0         
           
              //if these two conditions are true then print message on the JOptionPane 
           JOptionPane.showMessageDialog(null, "No data to delete", "Student Result System", JOptionPane.NO_OPTION );
           }
           else //if there are rows in the table, then print this using JOptionPane
               JOptionPane.showMessageDialog(null, "Select a row to delete", "Student Result System", JOptionPane.OK_OPTION);
       }
       else //if you have selected a row then remove it
           model.removeRow(jTable1.getSelectedRow());
           
       
       
       
       
    }//GEN-LAST:event_deleteButtonActionPerformed

    //ranking button component
    private void rankingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rankingButtonActionPerformed
       
        Double[] results = new Double[8];       //create an array to hold the subjects text fields
        
        /*get the text in each text field then convert it to double before storing it in each array index */
        results[0] = Double.parseDouble(mathsTextField.getText());
        results[1] = Double.parseDouble(englishTextField.getText());
        results[2] = Double.parseDouble(biologyTextField.getText());
        results[3] = Double.parseDouble(computingTextField.getText());
        results[4] = Double.parseDouble(chemistryTextField.getText());
        results[5] = Double.parseDouble(physicsTextFiield.getText());
        results[6] = Double.parseDouble(addMathTextField.getText());
        results[7] = Double.parseDouble(businessTextField.getText());
        
        
        double total = 0;  //variable to hold total scores
        String average;    //string variable to hold average of scores
        
        //loop through the array then compute
        for (int i = 0; i < results.length; i++)
        {
            total += results[i];    //store scores in total variable
            if(total >= 700)        //if total is 700 and above 
            {
                rankingTextField.setText("1st: First class "); // print the message on ranking text field
            }
            
            else if(total >= 600)  //if total is 600 and above 
            {
                rankingTextField.setText("2i: Second class upper"); // print the message on ranking text field
            }
            
             else if(total >= 500)  //if total is 500 and above     
            {
                rankingTextField.setText("2ii: Second class lower"); // print the message on ranking text field
            }
            
             else if(total >= 400)  //if total is 400 and above 
            {
                rankingTextField.setText("3rd: Third class "); // print the message on ranking text field
            }
            
             else if(total >= 300)  //if total is 300 and above 
            {
                rankingTextField.setText(" Pass ");     // print the message on ranking text field
            }
            
            else 
            {
                rankingTextField.setText(" Fail ");  // print the message on ranking text field
            }
            
            
        }
        
        average = String.format("%.0f",(double) (total / 8));   //get the average and return it as a string
        averageTextField.setText(average);                      //set average on average text field
        
         String totalData = String.format("%.0f", total);       //get the total scores then return it as a string
        totalScoreTextField.setText(totalData);                 //set total on total text field
        
        
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); //downcasting the superclass variable of class JTable (jTable1) to the variable of the subclass (model)
        
       //annonymous inner class to add items to the table component 
       model.addRow( new Object[]
       {
         //add items from each component to the table component  
         studentIdTextField.getText(),
         jComboBox1.getSelectedItem(),
         mathsTextField.getText(),
         englishTextField.getText(),
         biologyTextField.getText(),
         computingTextField.getText(),
         chemistryTextField.getText(),
         physicsTextFiield.getText(),
         addMathTextField.getText(),
         businessTextField.getText(),
         totalScoreTextField.getText(),
         averageTextField.getText(),
         rankingTextField.getText(),
       
       
       }
               
               
               
        );
       
        
        
        
        
        
        
    }//GEN-LAST:event_rankingButtonActionPerformed

    //method to ensure that only digits are entered in maths text field
    private void mathsTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mathsTextFieldKeyTyped
       
        char number = evt.getKeyChar();         //get the key typed and store as char
        
        if(!(Character.isDigit(number) )        // if key is not digit key
                || (number == KeyEvent.VK_BACKSPACE)    //or key is backspace key
                || (number == KeyEvent.VK_DELETE))      //or key is delete key
        evt.consume();                                  //consume key
        
    }//GEN-LAST:event_mathsTextFieldKeyTyped

        //method to ensure that only digits are entered in english text field
    private void englishTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_englishTextFieldKeyTyped
       char number = evt.getKeyChar();      //get the key typed and store as char
        
        if(!(Character.isDigit(number) )   // if key is not digit key
                || (number == KeyEvent.VK_BACKSPACE) //or key is backspace key
                || (number == KeyEvent.VK_DELETE)) //or key is delete key
        evt.consume();                              //consume key
    }//GEN-LAST:event_englishTextFieldKeyTyped

            //method to ensure that only digits are entered in biology text field
    private void biologyTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_biologyTextFieldKeyTyped
       char number = evt.getKeyChar();  //get the key typed and store as char
        
        if(!(Character.isDigit(number) )  // if key is not digit key
                || (number == KeyEvent.VK_BACKSPACE) //or key is backspace key
                || (number == KeyEvent.VK_DELETE)){ //or key is delete key
        evt.consume();                              //consume key
        
    }
    }//GEN-LAST:event_biologyTextFieldKeyTyped
            //method to ensure that only digits are entered in computing text field
    private void computingTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_computingTextFieldKeyTyped
        char number = evt.getKeyChar();         //get the key typed and store as char
        
        if(!(Character.isDigit(number) )        // if key is not digit key
                || (number == KeyEvent.VK_BACKSPACE) //or key is backspace key
                || (number == KeyEvent.VK_DELETE)){  //or key is delete key
        evt.consume();                               //consume key
        }

    }//GEN-LAST:event_computingTextFieldKeyTyped
            //method to ensure that only digits are entered in chemistry text field
    private void chemistryTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chemistryTextFieldKeyTyped
    char number = evt.getKeyChar();                     //get the key typed and store as char
        
        if(!(Character.isDigit(number) )                // if key is not digit key
                || (number == KeyEvent.VK_BACKSPACE)    //or key is backspace key
                || (number == KeyEvent.VK_DELETE)){    //or key is delete key
        evt.consume();                                  //consume key
        }

    }//GEN-LAST:event_chemistryTextFieldKeyTyped
            //method to ensure that only digits are entered in physics text field
    private void physicsTextFiieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_physicsTextFiieldKeyTyped
    char number = evt.getKeyChar();                     //get the key typed and store as char
        
        if(!(Character.isDigit(number) )                // if key is not digit key
                || (number == KeyEvent.VK_BACKSPACE)   //or key is backspace key
                || (number == KeyEvent.VK_DELETE)){    //or key is delete key
        evt.consume();                                  //consume key
        }
    }//GEN-LAST:event_physicsTextFiieldKeyTyped

                //method to ensure that only digits are entered in add maths text field
    private void addMathTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addMathTextFieldKeyTyped
    char number = evt.getKeyChar();                      //get the key typed and store as char
        
        if(!(Character.isDigit(number) )                // if key is not digit key
                || (number == KeyEvent.VK_BACKSPACE)   //or key is backspace key
                || (number == KeyEvent.VK_DELETE)){   //or key is delete key
        evt.consume();                                 //consume key

        }
    }//GEN-LAST:event_addMathTextFieldKeyTyped
                //method to ensure that only digits are entered in business text field
    private void businessTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_businessTextFieldKeyTyped
        char number = evt.getKeyChar();                  //get the key typed and store as char
        
        if(!(Character.isDigit(number) )                // if key is not digit key
                || (number == KeyEvent.VK_BACKSPACE)    //or key is backspace key
                || (number == KeyEvent.VK_DELETE)){     //or key is delete key
        evt.consume();                                      //consume key
        }
    }//GEN-LAST:event_businessTextFieldKeyTyped

    //method to print trancript of student
    private void transcriptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transcriptButtonActionPerformed
        transcript.append("\nStudent Result Recording System\n"
                          + "==================================\n"
                          + "\nMath:    \t\t" +    mathsTextField.getText()
                          + "\nEnglish:\t\t" + englishTextField.getText()
                          + "\nBiology:\t\t" + biologyTextField.getText()
                          + "\nComputing:\t\t" + computingTextField.getText()
                          + "\nPhysics:\t\t" + physicsTextFiield.getText()
                          + "\nAdd Math:\t\t" + addMathTextField.getText()
                          + "\nBusiness:\t\t" + businessTextField.getText()
                           + "\n=================================="
                          + "\nTotal Score:\t\t" + totalScoreTextField.getText()
                          + "\nAverage:\t\t" + averageTextField.getText()
                          + "\nRanking:\t\t" + rankingTextField.getText());
                            
                          
        
        
    }//GEN-LAST:event_transcriptButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
      
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentResult().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addMathTextField;
    private javax.swing.JTextField averageTextField;
    private javax.swing.JTextField biologyTextField;
    private javax.swing.JTextField businessTextField;
    private javax.swing.JTextField chemistryTextField;
    private javax.swing.JTextField computingTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField englishTextField;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField firstnameTextField;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField mathsTextField;
    private javax.swing.JTextField physicsTextFiield;
    private javax.swing.JButton rankingButton;
    private javax.swing.JTextField rankingTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField studentIdTextField;
    private javax.swing.JTextField surnameTextField;
    private javax.swing.JTextField totalScoreTextField;
    private javax.swing.JTextArea transcript;
    private javax.swing.JButton transcriptButton;
    // End of variables declaration//GEN-END:variables
}
